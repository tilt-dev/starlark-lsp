# This file was generated by `make builtins` based on the spec at:
# https://raw.githubusercontent.com/google/starlark-go/master/doc/spec.md

def dir(x) -> List[String]:
  """`dir(x)` returns a new sorted list of the names of the attributes (fields and methods) of its operand. The attributes of a value `x` are the names `f` such that `x.f` is a valid expression."""
  pass


class Dict:
  def keys(self) -> List:
    """`D.keys()` returns a new list containing the keys of dictionary D, in the same order as they would be returned by a `for` loop."""
    pass

  def pop(self, key):
    """`D.pop(key[, default])` returns the value corresponding to the specified key, and removes it from the dictionary.  If the dictionary contains no such value, and the optional `default` parameter is present, `pop` returns that value; otherwise, it fails."""
    pass

class List:
  def append(self, x) -> None:
    """`L.append(x)` appends `x` to the list L, and returns `None`."""
    pass

  def extend(self, x) -> None:
    """`L.extend(x)` appends the elements of `x`, which must be iterable, to the list L, and returns `None`."""

class String:
  def isalnum(self) -> bool:
    """`S.isalnum()` reports whether the string S is non-empty and consists only Unicode letters and digits."""
    pass

  def lower(self) -> String:
    """`S.lower()` returns a copy of the string S with letters converted to lowercase."""
    pass

  def startswith(self, prefix) -> bool:
    """`S.startswith(prefix[, start[, end]])` reports whether the string `S[start:end]` has the specified prefix."""
    pass
